//看似需要二维数组，实际上算完一行或者一列之后，那个数不会再改变，因此用一维数组加上原来的值就可以了。可以类比0-1背包算法，有二维方法和一维方法。
class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int row=obstacleGrid.size();
        if(row<1)return 0;
        int col=obstacleGrid[0].size();
        vector<int>map(col+1,0);
        map[col-1]=1;
        for(int i=row-1;i>=0;i--)
            for(int j=col-1;j>=0;j--)
            {
                if(obstacleGrid[i][j]==1)map[j]=0;
                else map[j]+=map[j+1];
            }
        return map[0];
                
    
    }
};

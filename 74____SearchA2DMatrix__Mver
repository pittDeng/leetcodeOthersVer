//请注意二分法查找，一定是start+1,退出循环判断mid的值是否为要找的值
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        if(matrix.empty())return false;
        int rowSize=matrix.size();
        int colSize=matrix[0].size();
        if(colSize<1)return false;
        int start=0;
        int end=rowSize-1;
        int row=(start+end)/2;
        while(start<end)
        {
            if(matrix[row][0]<target)start=row+1;
            else if(matrix[row][0]>target)end=row;
            else return true;
            row=(start+end)/2;
        }
        if(matrix[row][0]>target)row=row-1;
        if(row<0)return false;
        start=0;
        end=colSize-1;
        int col=(start+end)/2;   
        while(start<end)
        {
            if(matrix[row][col]<target)start=col+1;
            else if(matrix[row][col]>target)end=col;
            else return true;
            col=(start+end)/2;
        }
        if(matrix[row][col]==target)return true;
        return false;
        
        
    }
};
